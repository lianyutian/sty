Index: sty_netty/src/main/java/com/lm/sty/netty/netty/HelloServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/sty_netty/src/main/java/com/lm/sty/netty/netty/HelloServer.java b/sty_netty/src/main/java/com/lm/sty/netty/netty/HelloServer.java
new file mode 100644
--- /dev/null	(date 1686832623312)
+++ b/sty_netty/src/main/java/com/lm/sty/netty/netty/HelloServer.java	(date 1686832623312)
@@ -0,0 +1,39 @@
+package com.lm.sty.netty.netty;
+
+import io.netty.bootstrap.ServerBootstrap;
+import io.netty.channel.ChannelHandlerContext;
+import io.netty.channel.ChannelInboundHandlerAdapter;
+import io.netty.channel.ChannelInitializer;
+import io.netty.channel.nio.NioEventLoopGroup;
+import io.netty.channel.socket.nio.NioServerSocketChannel;
+import io.netty.channel.socket.nio.NioSocketChannel;
+import io.netty.handler.codec.string.StringEncoder;
+
+/**
+ * @author : [lm]
+ * @version : [v1.0]
+ * @createTime : [2023/6/15 20:34]
+ */
+public class HelloServer {
+
+    public static void main(String[] args) {
+
+        // 1. 启动器，负责组装 netty 组件，启动服务器
+        new ServerBootstrap()
+                .group(new NioEventLoopGroup())
+                .channel(NioServerSocketChannel.class)
+                .childHandler(new ChannelInitializer<NioSocketChannel>() {
+                    @Override
+                    protected void initChannel(NioSocketChannel ch) throws Exception {
+                        ch.pipeline().addLast(new StringEncoder());
+                        ch.pipeline().addLast(new ChannelInboundHandlerAdapter() {
+                            @Override
+                            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {
+                                System.out.println(msg);
+                            }
+                        });
+                    }
+                })
+                .bind(8080);
+    }
+}
